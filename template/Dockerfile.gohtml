#######################################################################################################################
# Dockerfile generated by micro-golang
#
# Date:    {{ .Date }}
# Version: {{ .Version }}
#######################################################################################################################
FROM alpine:{{ .ParentTag }}

LABEL maintainer="{{ .Maintainer }}"

ENV GOROOT=/usr/lib/go \
    GOPATH=/go \
    GOBIN=/go/bin
ENV PATH=$PATH:$GOROOT/bin:$GOBIN:$GOPATH/scripts {{ if .Glibc -}}\
    LANG=C.UTF-8{{ end }}
{{ if .Env }}
ENV
{{- range e := .Env -}}
    e \
{{ end }}
{{ end }}
RUN {{ if .Glibc -}}
    ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download" && \
    ALPINE_GLIBC_PACKAGE_VERSION="2.26-r0" && \
    ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk" && \
    ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk" && \
    ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk" && \
    apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \
    wget \
    "https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub" \
    -O "/etc/apk/keys/sgerrand.rsa.pub" && \
    wget \
        "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME" && \
    apk add --no-cache \
        "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME" && \
    rm "/etc/apk/keys/sgerrand.rsa.pub" && \
    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 "$LANG" || true && \
    echo "export LANG=$LANG" > /etc/profile.d/locale.sh && \
    apk del glibc-i18n wget ca-certificates && \
    rm "/root/.wget-hsts" && \
    apk del .build-dependencies && \
    rm \
        "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME" && \
{{ end -}}
    mkdir -p /go/src/app && \
    mkdir -p /go/bin && \
    mkdir -p /go/scripts && \
    chmod -R +x /go/scripts && \
    adduser -u 1001 -G root -h /go -D nonroot

WORKDIR /go/src/app

{{ if .Scripts }}
COPY scripts /go/scripts
{{ end }}

{{- if .DockerCommands -}}
{{ range v := .DockerCommands -}}
v.Command
{{ end -}}
{{ end -}}

########################################################################################################################
# Application
########################################################################################################################
{{ if .User }}USER {{ .User }}{{ end }}
{{ if .Workdir }}WORKDIR {{ .Workdir }}{{ end }}
{{ if .Entrypoint }}ENTRYPOINT {{ .Entrypoint }} {{- end }}
CMD ["{{ .Cmd }}"]