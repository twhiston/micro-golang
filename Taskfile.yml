all:
  cmds:
    - task: lint
    - task: clean
    - task: build
    - task: test

ci:
  cmds:
   - task: clean
   - task: build
   - task: test


lint:
  cmds:
    - task: lint:hadolint
    - task: shellcheck

lint:shellcheck:
 cmds:
    - shellcheck ./context/test/base/scripts/hold.sh
    - shellcheck ./context/test/base/scripts/test.sh
    - shellcheck ./context/prod/scripts/install.sh
    - shellcheck ./context/prodv3/builder/scripts/install.sh

lint:hadolint:
  cmds:
    - |
      {{- $list :=  .VERSIONS | splitLines -}}
      set -e
      {{ range $i, $version := $list -}}
         {{ if $version }}hadolint ./context/{{ $version | replace "-" "/" }}/Dockerfile{{ end }}
      {{ end -}}


clean:
  cmds:
    - |
      {{ range $i, $version := .VERSIONS | splitLines -}}
         {{ if $version }}docker rmi "{{ $.NS }}/{{ $.REPO }}:{{ $version }}" -f || true {{ end }}
      {{end -}}
    - |
      {{ range $i, $version := .INTEGRATIONTESTS | splitLines -}}
        {{ if $version }}docker rmi "{{ $.NS }}/{{ $.REPO }}-{{ $.INTEGRATION_NAMESPACE }}:{{ $version }}" -f || true {{ end }}
      {{end -}}

build:
  cmds:
    - |
      set -e
      {{ range $i, $version := .VERSIONS | splitLines -}}
         {{ if $version }}docker build -t "{{ $.NS }}/{{ $.REPO }}:{{ $version }}" ./context/{{ $version | replace "-" "/" }}{{ end }}
      {{ end -}}

push:
  cmds:
    - |
      {{ range $i, $version := .VERSIONS | splitLines -}}
         {{ if $version }}docker push "{{ $.NS }}/{{ $.REPO }}:{{ $version }}"{{ end }}
      {{ end -}}

test:
  cmds:
   - task: test:env
   - task: test:integration

test:env:
  deps: [build]
  cmds:
    - |
      set -e
      {{ range $i, $version := .ENVTESTS | splitLines -}}
          {{ if $version }}
            pushd ./context/{{ $version | replace "-" "/" }}
              GOSS_FILES_STRATEGY="cp" dgoss run -it "{{ $.NS }}/{{ $.REPO }}:{{ $version }}" /bin/ash
            popd
          {{ end }}
      {{ end -}}

test:integration:
  deps: [build]
  cmds:
    - |
      set -e
      {{ range $i, $version := .INTEGRATIONTESTS | splitLines -}}
          {{ if $version }}
            pushd ./tests/{{ $version }}
              docker build -t "{{ $.NS }}/{{ $.REPO }}-{{ $.INTEGRATION_NAMESPACE }}:{{ $version }}" .
              docker run "{{ $.NS }}/{{ $.REPO }}-{{ $.INTEGRATION_NAMESPACE }}:{{ $version }}"
              GOSS_FILES_STRATEGY="cp" dgoss run -it "{{ $.NS }}/{{ $.REPO }}-{{ $.INTEGRATION_NAMESPACE }}:{{ $version }}" /bin/ash
            popd
          {{ end }}
      {{ end -}}

ci:build:
  cmds:
    - |
      pushd ./ci
        docker build -t "{{ $.NS }}/{{ $.REPO }}-ci:latest" .
      popd