all:
  cmds:
    - task: lint
    - task: clean
    - task: build
    - task: test

lint:
  cmds:
    - |
      {{- $list :=  .VERSIONS | splitLines -}}
      set -e
      {{ range $i, $version := $list -}}
         {{ if $version }}hadolint ./context/{{ $version | replace "-" "/" }}/Dockerfile{{ end }}
      {{ end -}}
    - shellcheck ./context/test/base/scripts/hold.sh
    - shellcheck ./context/test/base/scripts/test.sh

clean:
  cmds:
    - |
      {{- $list :=  .VERSIONS | splitLines -}}
      {{- range $i, $version := $list -}}
         {{ if $version }}docker rmi "{{ $.NS }}/{{ $.REPO }}:{{ $version }}" 2> /dev/null{{ end }}
      {{end -}}

build:
  cmds:
    - |
      set -e
      {{ range $i, $version := .VERSIONS | splitLines -}}
         {{ if $version }}docker build -t "{{ $.NS }}/{{ $.REPO }}:{{ $version }}" ./context/{{ $version | replace "-" "/" }}{{ end }}
      {{ end -}}

push:
  cmds:
    - |
      {{ range $i, $version := .VERSIONS | splitLines -}}
         {{ if $version }}docker push "{{ $.NS }}/{{ $.REPO }}:{{ $version }}"{{ end }}
      {{ end -}}

test:
  cmds:
   - task: test:env
   - task: test:integration

test:env:
  deps: [build]
  cmds:
    - |
      set -e
      {{ range $i, $version := .ENVTESTS | splitLines -}}
          {{ if $version }}
            pushd ./context/{{ $version | replace "-" "/" }}
              dgoss run -it "{{ $.NS }}/{{ $.REPO }}:{{ $version }}" /bin/ash
            popd
          {{ end }}
      {{ end -}}


test:integration:
  cmds:
    - task: test:integration:test:nodep
    - task: test:integration:test:dep
    - task: test:integration:test:nodep
    - task: test:integration:prod:dep


# run the test once in goss, so we can ensure the output is correct, and once as the default container command
test:integration:test:nodep:
  dir: tests/test
  cmds:
    - docker build -t tomwhiston/micro-golang-integration-test:nodep .
    - docker run tomwhiston/micro-golang-integration-test:nodep
    - dgoss run -it tomwhiston/micro-golang-integration-test:nodep /bin/ash

test:integration:test:dep:
  dir: tests/test-dep
  cmds:
    - docker build -t tomwhiston/micro-golang-integration-test:dep .
    - docker run tomwhiston/micro-golang-integration-test:dep
    - dgoss run -it tomwhiston/micro-golang-integration-test:dep /bin/ash

test:integration:prod:nodep:
  dir: tests/prod
  cmds:
    - docker build -t tomwhiston/micro-golang-integration-test:prod .
    - docker run tomwhiston/micro-golang-integration-test:prod
    - dgoss run -it tomwhiston/micro-golang-integration-test:prod /bin/ash

test:integration:prod:dep:
  dir: tests/prod-dep
  cmds:
    - docker build -t tomwhiston/micro-golang-integration-test:prod-dep .
    - docker run tomwhiston/micro-golang-integration-test:prod-dep
    - dgoss run -it tomwhiston/micro-golang-integration-test:prod-dep /bin/ash