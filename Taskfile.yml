all:
  cmds:
    - task: lint
    - task: clean
    - task: build
    - task: test:env
#    - task: test:integration

lint:
  cmds:
    - |
      {{- $list :=  .VERSIONS | splitLines -}}
      set -e
      {{- range $i, $version := $list -}}
         {{ if $version }}hadolint ./context/{{ $version | replace "-" "/" }}/Dockerfile{{ end }}
      {{ end -}}
    - shellcheck ./context/test/base/scripts/hold.sh
    - shellcheck ./context/test/base/scripts/test.sh

clean:
  cmds:
    - |
      {{- $list :=  .VERSIONS | splitLines -}}
      {{- range $i, $version := $list -}}
         {{ if $version }}docker rmi "{{ $.NS }}/{{ $.REPO }}:{{ $version }}"{{ end }}
      {{end -}}

build:
  cmds:
    - |
      set -e
      {{- range $i, $version := .VERSIONS | splitLines -}}
         {{ if $version }}docker build -t "{{ $.NS }}/{{ $.REPO }}:{{ $version }}" ./context/{{ $version | replace "-" "/" }}{{ end }}
      {{ end -}}

test:env:
  deps: [build]
  cmds:
    - |
      {{- range $i, $version := .ENVTESTS | splitLines -}}
          {{ if $version }}
            pushd ./context/{{ $version | replace "-" "/" }}
              dgoss run -it "{{ $.NS }}/{{ $.REPO }}:{{ $version }}" /bin/ash
            popd
          {{ end }}
      {{ end -}}


test:integration:
  deps: [build]
  cmds:
    - task: test:integration:build
    - task: test:integration:test

test:integration:build:
  cmds:
    - docker build -t tomwhiston/micro-golang-integration-test:{{ $version | replace "-" "/" }} .

test:integration:test:
  cmds:
    - dgoss run -it "tomwhiston/micro-golang-integration-test:{{ $version | replace "-" "/" }}" /bin/ash
