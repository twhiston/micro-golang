all:
  cmds:
    - task: lint
    - task: clean
    - task: build
    - task: test

ci:
  cmds:
   - task: clean
   - task: build
   - task: test


lint:
  cmds:
    - task: lint:hadolint
    - task: lint:shellcheck

# Ignore issues related to not using cd
lint:shellcheck:
 cmds:
    - shellcheck ./context/test/base/scripts/hold.sh -e SC2164
    - shellcheck ./context/test/base/scripts/test.sh -e SC2164
    - shellcheck ./context/prod/scripts/install.sh -e SC2164
    - shellcheck ./context/prodv3/builder/scripts/install.sh -e SC2164

# Ignore warning about pinning specific versions
lint:hadolint:
  cmds:
    - |
      set -e
      {{ range $i, $version := .VERSIONS | splitLines -}}
         {{ if $version }}hadolint ./context/{{ $version | replace "-" "/" }}/Dockerfile --ignore=DL3018{{ end }}
      {{ end -}}


clean:
  cmds:
    - |
      {{ range $i, $version := .VERSIONS | splitLines -}}
         {{ if $version }}docker rmi "{{ $.NS }}/{{ $.REPO }}:{{ $version }}" -f || true {{ end }}
      {{end -}}
    - |
      {{ range $i, $version := .INTEGRATIONTESTS | splitLines -}}
        {{ if $version }}docker rmi "{{ $.NS }}/{{ $.REPO }}-{{ $.INTEGRATION_NAMESPACE }}:{{ $version }}" -f || true {{ end }}
      {{end -}}

build:
  cmds:
    - |
      set -e
      {{ range $i, $version := .VERSIONS | splitLines -}}
         {{ if $version }}docker build -t "{{ $.NS }}/{{ $.REPO }}:{{ $version }}{{ if $.BRANCH }}-{{ $.BRANCH }}{{ end }}" ./context/{{ $version | replace "-" "/" }}{{ end }}
      {{ end -}}

push:
  cmds:
    - |
      {{ range $i, $version := .VERSIONS | splitLines -}}
         {{ if $version }}docker push "{{ $.NS }}/{{ $.REPO }}:{{ $version }}"{{ end }}
      {{ end -}}

test:
  cmds:
   - task: test:env
   - task: test:integration
   - task: test:toolchain

test:env:
  deps: [build]
  cmds:
    - |
      set -e
      {{ range $i, $version := .ENVTESTS | splitLines -}}
          {{ if $version }}
            pushd ./context/{{ $version | replace "-" "/" }}
              GOSS_FILES_STRATEGY="cp" dgoss run -it "{{ $.NS }}/{{ $.REPO }}:{{ $version }}" /bin/ash
            popd
          {{ end }}
      {{ end -}}

test:integration:
  deps: [build]
  cmds:
    - |
      set -e
      {{ range $i, $version := .INTEGRATIONTESTS | splitLines -}}
          {{ if $version }}
            pushd ./tests/{{ $version }}
              docker build -t "{{ $.NS }}/{{ $.REPO }}-{{ $.INTEGRATION_NAMESPACE }}:{{ $version }}" .
              docker run "{{ $.NS }}/{{ $.REPO }}-{{ $.INTEGRATION_NAMESPACE }}:{{ $version }}"
              GOSS_FILES_STRATEGY="cp" dgoss run -it "{{ $.NS }}/{{ $.REPO }}-{{ $.INTEGRATION_NAMESPACE }}:{{ $version }}" /bin/ash
            popd
          {{ end }}
      {{ end -}}

ci:build:
  cmds:
    - |
      pushd ./ci
        docker build -t "{{ $.NS }}/{{ $.REPO }}-ci:latest" .
      popd

test:toolchain:
  cmds:
    - |
      set -e
      pushd ./tests/toolchain
        docker build -t "{{ $.NS }}/{{ $.REPO }}:toolchain-test" .
        docker run "{{ $.NS }}/{{ $.REPO }}:toolchain-test"
        docker run "{{ $.NS }}/{{ $.REPO }}:toolchain-test" task --version
        docker run "{{ $.NS }}/{{ $.REPO }}:toolchain-test" dep version
      popd

a:
  cmds:
    - docker run -it "{{ $.NS }}/{{ $.REPO }}:toolchain-test" /bin/ash

toolchain:build:app:
  cmds:
    - |
      pushd ./context/toolchain/mgl-tcb
        go install
      popd